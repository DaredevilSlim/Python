#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# ЗАДАЧА №493 - Морской бой - 2
# (Время: 1 сек. Память: 16 Мб Сложность: 21%)
# «Морской бой» - игра для двух участников, в которой игроки по очереди называют координаты на неизвестной им карте
# соперника. Если у соперника по этим координатам имеется корабль, то корабль или его часть «топится», а попавший
# получает право сделать еще один ход. Цель игрока - первым поразить все корабли противника.
# «Морской бой» очень популярен среди учеников одной физико-математической школы. Ребята очень любят в него играть на
# переменах. Вот и сейчас ученики Иннокентий и Емельян начали новую партию.
# Правила, по которым ребята расставляют корабли перед началом партии, несколько отличаются от классических. Во-первых,
# игра происходит на поле размером N×M, а не 10×10. Во-вторых, число кораблей, их размер и форма выбираются ребятами
# перед партией - так играть намного интереснее.
# Емельян уже расставил все свои корабли, кроме одного однопалубного. Такой корабль занимает ровно одну клетку.
# Задана расстановка кораблей Емельяна. Найдите число способов поставить оставшийся однопалубный корабль. При этом
# учитывайте, что по правилам его можно ставить только в ту клетку, все соседние с которой не заняты. В этой задаче
# соседними считаются клетки, имеющие общую сторону.
# Входные данные - Первая строка входного файла INPUT.TXT содержит два числа: N и M (1 ≤ N, M ≤ 100). Последующие N
# строк описывают игровое поле - каждая из них содержит M символов. Символом «.» (точка) обозначена свободная клетка,
# символом «*» (звездочка) - занятая кораблем.
# Выходные данные - В выходной файл OUTPUT.TXT выведите ответ на задачу.
a, b = map(int, input().split())
c = '.' * (b + 2)
r = 0
d = [c] + ['.' + input() + '.' for _ in ' ' * a] + [c]
for i in range(1, len(d) - 1):
    for j in range(1, len(d[0]) - 1):
        if d[i][j] + d[i][j - 1] + d[i][j + 1] + d[i - 1][j] + d[i + 1][j] == '.....':
            r += 1
print(r)
# Или
a, b = map(int, input().split())
c = '.' * (b + 2)
d = [c]
r = 0
for _ in ' ' * a:
    d.append('.' + input() + '.')
d.append(c)
for i in range(1, len(d) - 1):
    for j in range(1, len(d[0]) - 1):
        if d[i][j] + d[i][j - 1] + d[i][j + 1] + d[i - 1][j] + d[i + 1][j] == '.....':
            r += 1
print(r)
# Или
a, b = map(int, input().split())
c = ['.' * (b + 2)]
r = 0
for _ in ' ' * a:
    c.append('.' + input() + '.')
c.append('.' * (b + 2))
for i in range(1, len(c) - 1):
    for j in range(1, len(c[0]) - 1):
        if c[i][j] == '.':
            if c[i][j - 1] == '.':
                if c[i][j + 1] == '.':
                    if c[i - 1][j] == '.':
                        if c[i + 1][j] == '.':
                            r += 1
print(r)
