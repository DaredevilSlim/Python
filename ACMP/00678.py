#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# ЗАДАЧА №678 - Напёрстки
# (Время: 1 сек. Память: 16 Мб Сложность: 15%)
# Шулер показывает следующий трюк. Он имеет три одинаковых наперстка. Под первый (левый) он кладет маленький шарик.
# Затем он очень быстро выполняет ряд перемещений наперстков, каждое из которых - это одно из трех перемещений -
# A, B, C:
# A - обменять местами левый и центральный наперстки,
# B - обменять местами правый и центральный наперстки,
# C - обменять местами левый и правый наперстки.
# Необходимо определить, под каким из наперстков окажется шарик после всех перемещений.
# Входные данные - В единственной строке входного файла INPUT.TXT записана строка длиной от 1 до 50 символов из
# множества {A, B, C} – последовательность перемещений.
a = 1
b = 0
c = 0
for i in input():
    if i == 'A':
        a, b = b, a
    elif i == 'B':
        b, c = c, b
    else:
        a, c = c, a
print([a, b, c].index(1) + 1)
# Или
s = input()
a, b, c = 1, 0, 0
for i in s:
    if i == 'A':
        a, b = b, a
    elif i == 'B':
        b, c = c, b
    else:
        a, c = c, a
print([a, b, c].index(1) + 1)
# Или
c = input()
s = [1, 0, 0]
for i in c:
    if i == 'A':
        s[:2] = s[1::-1]
    elif i == 'B':
        s[1:] = s[:0:-1]
    else:
        s = s[::-1]
print(s.index(1) + 1)
# Или
c = input()
s = '100'
for i in c:
    if i == 'A':
        s = s[1] + s[0] + s[2]
    elif i == 'B':
        s = s[0] + s[2] + s[1]
    else:
        s = s[::-1]
print(s.find('1') + 1)
