#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from collections.abc import Iterable
# "Иногда нули напоминают очень вкусные пончики. И каждый раз, доедая пончик, нам хочется ещё один, ещё, и ещё..."
# Перед вами список целых чисел. Ваша задача в этой миссии – продублировать (..., 🍩, ... --> ..., 🍩, 🍩, ...) все нули
# в данном списке (думайте о пончиках ;-P) и вернуть в виде любого итерируемого объекта. Посмотрим на пример:
# [1, 0, 2, 0] -> [1, 0, 0, 2, 0, 0]
# Входные данные: Список целых чисел.
# Выходные данные: Список или другой итерируемый объект (кортеж, генератор, итератор) из целых чисел.
def duplicate_zeros(donuts: list[int]) -> Iterable[int]:
    new_donuts = []
    for i in donuts:
        new_donuts.append(i) if i != 0 else new_donuts.extend([0, 0])
    return new_donuts


print(list(duplicate_zeros([1, 0, 2, 3, 0, 4, 5, 0])))  # [1, 0, 0, 2, 3, 0, 0, 4, 5, 0, 0, ]
print(list(duplicate_zeros([0, 0, 0, 0])))              # [0, 0, 0, 0, 0, 0, 0, 0]
print(list(duplicate_zeros([100, 10, 0, 101, 1000])))   # [100, 10, 0, 0, 101, 1000]
