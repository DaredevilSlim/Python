#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# «Нам нужно долететь домой как можно дешевле, чтобы больше денег осталось на подарки. Тётя Лида просила сыров разных, а
# Вася хотел машинку новую. Я уже довольно долго смотрю на расписание, и мне начинает казаться, что некоторые самолёты
# летают зря.»
# На входе вы получаете расписание самолётов в виде списка, каждый элемент которого — это цена прямого воздушного
# соединения двух городов (список из 3 элементов: первые два — названия городов в виде строк, и третий — цена перелёта).
# Самолёты летают в обе стороны и цена в обе стороны одинаковая. Есть вероятность, что соединения между городами может и
# не быть.
# Найдите цену самого дешёвого перелёта для городов, которые переданы 2-м и 3-м аргументами. Если перелет невозможен,
# верните 0
# Входные данные: 3 аргумента: расписание перелётов в виде списка списков, город вылета, город назначения как строки.
# Выходные данные: Лучшая цена как целое число.
# Как это используется: может быть использовано в повседневной жизни для нахождения оптимальной комбинации.
# Предусловия:
# цена всегда целое число;
# в расписании рейсов есть хотя бы один элемент;
# оба искомых города есть в расписании.
def cheapest_flight(costs: list, a: str, b: str) -> int:
    d = dict()
    b = costs + [[costs[i][1], costs[i][0], costs[i][2]] for i in range(len(costs))]
    print(b)
    for i in range(len(b)):
        d[b[0][0]+b[0][1]] = b[0][2]
        for j in range(1, len(b)):
            print(b[j], b[0][2], b[j][2])
            if b[0][1] == b[j][0]:
                if b[0][0]+b[j][1] in d and d[b[0][0]+b[j][1]] < (b[0][2] + b[j][2]):
                    d[b[0][0]+b[j][1]] = b[0][2] + b[j][2]
        print(d)
        b = b[1:] + b[1]
    return d


#print(cheapest_flight([["A", "C", 100], ["A", "B", 20], ["B", "C", 50]], "A", "C"))  # 70
#print(cheapest_flight([["A", "C", 100], ["A", "B", 20], ["B", "C", 50]], "C", "A"))  # 70
print(cheapest_flight(
        [
            ["A", "C", 40],
            ["A", "B", 20],
            ["A", "D", 20],
            ["B", "C", 50],
            ["D", "C", 70],
        ],
        "D",
        "C",
    )
   )  # 60
#print(cheapest_flight([["A", "C", 100], ["A", "B", 20], ["D", "F", 900]], "A", "F"))  # 0
#print(cheapest_flight([["A", "B", 10], ["A", "C", 15], ["B", "D", 15], ["C", "D", 10]], "A", "D"))  # 25
