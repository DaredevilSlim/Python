#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Я начал кормить одного из голубей. Через минуту прилетело еще два, и еще через минуту прилетело еще три голубя.
# Затем 4 и так далее (Пр: 1+2+3+4+...). Одной порции корма хватает одному голубю на минуту. В случае если еды не
# хватает на всех птиц, то сначала едят те голуби, что прилетели ранее. Голуби - это вечно голодные птицы и они будут
# есть и есть без остановки. Если у меня есть N порций корма, то сколько голубей я смогу покормить хотя бы по разу?
# Входные данные: Количество порций корма, как целое число (int).
# Выходные данные: Количество накормленных голубей, как целое число (int).
# Как это используется: В этой задаче мы видим, как можно использовать программирование для моделирования ситуаций.
# Конечно, любая модель имеет свои ограничения и приближения, но чаще всего нам и не нужна идеальная модель.
# Предусловия: 0 < N < 10 5 .
def checkio(food: int) -> int:
    all_pigeons = []
    new_pigeons = 1
    portion = 0
    while food > 0:
        all_pigeons += [0] * new_pigeons
        portion += new_pigeons
        for i in range(food if food < portion else portion):
            all_pigeons[i] += 1
        food -= portion
        new_pigeons += 1
    return len(all_pigeons) - all_pigeons.count(0)


print(checkio(1))     # 1
print(checkio(3))     # 2
print(checkio(5))     # 3
print(checkio(10))    # 6
print(checkio(0))     # 0
print(checkio(17))    # 6
