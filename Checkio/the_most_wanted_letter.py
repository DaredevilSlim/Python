#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Дан текст, который содержит различные английские буквы и знаки препинания. Вам необходимо найти самую частую букву в
# тексте. Результатом должна быть буква в нижнем регистре.
# При поиске самой частой буквы, регистр не имеет значения, так что при подсчете считайте, что "A" == "a". Убедитесь,
# что вы не считайте знаки препинания, цифры и пробелы, а только буквы.
# Если в тексте две и больше буквы с одинаковой частотой , тогда результатом будет буква, которая идет первой в алфавите. Для примера, "one" содержит "o", "n", "e" по одному разу, так что мы выбираем "e".
# Вх. данные: Текст для анализа, как строка.
# Вых. данные: Наиболее частая буква, как строка.
# Как это используется: Для большинства задач по дешифрованию необходимо знать частоту появления различных букв в
# подобном тексте. Для примера, мы легко можем взломать одноалфавитный шифр подстановки, если мы знаем вероятность
# появления букв. Это также может быть полезной информацией для лингвистов.
# Предусловия :
# text содержит только ASCII символы.
# 0 < len(text) ≤ 10 5

import string
def checkio(text):
    d = {}
    for i in text:
        if i.isalpha():
            i = i.lower()
            d[i] = d[i] + 1 if i in d else 1
    for i, j in sorted(d.items()):
        if j == max(d.values()):
            return i


print(checkio("Hello World!"))                # "l", "Hello test"
print(checkio("How do you do?"))              # "o", "O is most wanted"
print(checkio("One"))                         # "e", "All letter only once."
print(checkio("Oops!"))                       # "o", "Don't forget about lower case."
print(checkio("AAaooo!!!!"))                  # "a", "Only letters."
print(checkio("abe"))                         # "a", "The First."
print(checkio('Lorem ipsum dolor sit amet'))  # 'm'
print(checkio("a" * 9000 + "b" * 1000))       # "a", "Long."
print(checkio('a-z'))                         # 'a'
      