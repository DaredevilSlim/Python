#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import time  # Подключаем модуля time

# ГЛАВА 10
# Работа с датой и временем
# Python предоставляет средства для работы со значениями даты и времени, а также комбинациями даты и времени (временными
# отметками). Кроме того, он содержит инструменты для вывода календаря в виде текста или в формате HTML и измерения
# времени выполнения определенных фрагментов программы для целей отладки.


# 10.1 Получение текущих даты и времени
print('Получение текущих даты и времени')
# - time() - возвращает количество секунд, прошедшее с начала эпохи (обычно с 1 января 1970 г.), в виде вещественного
# числа:
print(time.time())  # Получаем количество секунд

# - gmtime([<Количество секунд>]) - возвращает универсальное время (UTC) в виде объекта struct_time. Если параметр не
# указан, возвращается текущее время. Если параметр указан, время будет соответствующим заданному количеству секунд,
# прошедших с начала эпохи. Примеры:
print(time.gmtime(0))             # Начало эпохи
print(time.gmtime())              # Текущая дата и время
print(time.gmtime(1690476586.0))  # Дата 27.07.2023
# Получить значение конкретного атрибута можно, указав его имя или индекс внутри объекта:
d = time.gmtime()
print(d.tm_year, d[0])
print(tuple(d))  # Преобразование в кортеж

# - localtime([<Количество секунд>]) - возвращает местное время в виде объекта struct_time. Если параметр не указан,
# возвращается текущее время. Если параметр указан, время будет соответствующим заданному количеству секунд, прошедших с
# начала эпохи. Примеры:
print(time.localtime())              # Текущая дата и время
print(time.localtime(1690476586.0))  # Дата 27.07.2023

# - mktime(<Объект struct_time>) - возвращает количество секунд, прошедших с начала эпохи, в виде вещественного числа.
# В качестве параметра указывается объект struct_time или кортеж из девяти элементов. Если указанная дата некорректна,
# возбуждается исключение OverflowError. Примеры:
d = time.localtime(1690476586.0)
print(time.mktime(d))
print(tuple(time.localtime(1690476586.0)))
print(time.mktime((2023, 7, 27, 19, 49, 46, 3, 208, 1)))
print(time.mktime((1940, 0, 31, 5, 23, 43, 5, 31, 0)))
# Объект struct_time, возвращаемый функциями gmtime() и localtime(), содержит следующие атрибуты (указаны тройки вида
# «имя атрибута - индекс - описание»):
# tm_year  - О - год;
# tm_mon   - 1 - месяц (число от 1 до 12);
# tm_mday  - 2 - день месяца (число от 1 до 31);
# tm_hour  - 3 - час (число от 0 до 23);
# tm_min   - 4 - минуты (число от 0 до 59);
# tm_sec   - 5 - секунды (число от 0 до 59);
# tm_wday  - б - день недели (число от 0 для понедельника до 6 для воскресенья);
# tm_yday  - 7 - количество дней, прошедшее с начала года (число от 1 до 366);
# tm_isdst - 8 - флаг коррекции летнего времени (значения 0, 1 или -1).
# Выведем текущие дату и время таким образом, чтобы день недели и месяц были написаны по-русски test_00050.py.
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#


# 195

