#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# ЧАСТЬ I
print('Глава 1')
# ПРОЦЕДУРНЫЕ ПРИМЕРЫ PYTHON
print('ПРОЦЕДУРНЫЕ ПРИМЕРЫ PYTHON')
# Карточная игра «Больше-меньше»
print('Карточная игра «Больше-меньше»')
# Мой первый пример — простая карточная игра под названием «Больше-меньше». В ней восемь карт случайным образом
# выбираются из колоды. Первая отображается лицевой стороной вверх. Игра просит игрока предсказать, будет ли следующая
# карта в выборе иметь большее или меньшее достоинство, чем текущая. Допустим, что показанная карта имеет значение 3.
# Игрок отвечает «больше», и показывается вторая карта. Если ее достоинство выше, то игрок выиграл. В этом же примере,
# если бы игрок ответил «меньше», он бы проиграл. За каждый правильный ответ игрок получает 20 очков, за неправильный —
# теряет 15. Если следующая карта, которую нужно перевернуть, имеет то же значение, что и предыдущая, игрок не угадал.
# Представление данных
# Программа должна представлять колоду из 52 карт, которую я построю в виде списка. Каждый из 52 элементов в списке
# станет словарем (набором пар ключ/значение). Чтобы представить любую карту, каждый словарь будет содержать три пары
# ключ/значение: 'ранг', 'масть' и 'значение'. Ранг — это название карты (туз, 2, 3 ... 10, валет, дама, король), но
# значение — это целое число, используемое для сравнения карт (1, 2, 3 ... 10, 11, 12, 13). Например, «валет треф» будет
# представлен в виде следующего словаря:
# {'rank': 'Jack', 'suit': 'Clubs', 'value': 11}
# Перед раундом игрок создает список, представляющий колоду, и перетасовывает его, чтобы рандомизировать порядок карт.
# У меня нет графического представления карт, поэтому каждый раз, когда пользователь выбирает «больше» или «меньше»,
# программа получает словарь карт из колоды и печатает ранг и масть для пользователя. Затем она сравнивает достоинство
# новой карты с предыдущей и дает обратную связь на ответ пользователя.
# Реализация
# Файл higher_or_lower_procedural.py содержит код игры «Больше-меньше».
# Программа начинается с создания колоды в виде списка 1. Каждая карта – это словарь, состоящий из ранга, масти и
# значения. Для каждого раунда игры я извлекаю первую карту из колоды и сохраняю компоненты в переменных 2.
# Для следующих семи карт пользователю предлагается предсказать, будет ли следующая карта выше или ниже, чем самая
# последняя 3. Следующая карта извлекается из колоды, а ее компоненты сохраняются во втором наборе переменных 4.
# Игра сравнивает ответ пользователя на текущую карту и выдает обратную связь и баллы на основе результата 5.
# Когда пользователь сделал прогнозы для всех семи карт в выборе, мы спрашиваем, хочет ли он сыграть снова 6.
# Эта программа демонстрирует множество элементов программирования в целом и Python в частности: переменные, инструкции
# присваивания, функции и вызовы функций, инструкции if/else, инструкции print, а также циклы, списки, строки и словари.
# В этой книге предполагается, что вы уже знакомы со всем, что показано в примере. Если программа содержит что-то новое
# или непонятное для вас, вероятно, стоит уделить время изучению соответствующего материала, прежде чем двигаться
# дальше.
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
